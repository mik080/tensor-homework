---
- name: configure webserver with tls
  hosts: nodes
  gather_facts: true
  become: true
  vars:
    nginx_port_no_tls: 80
    nginx_port_with_tls: 443
    

  tasks:
    - name: Creates directory
      file:
        path: /etc/nginx
        state: directory

    - name: add epel-release
      yum:
        name: epel-release
        state: present

    - name: install setuptools
      yum:
        name: python-setuptools
        state: present

    - name: install pip
      yum:
        name: python-pip
        state: present

    - name: upgrade pip
      pip:
        name: pip
        state: present
        version: 20.3    

    - name: install setuptools
      pip:
        name: PyOpenSSL
        state: latest    

    - name: Generate Private key
      openssl_privatekey: path=/etc/nginx/selfsigned.key 
     

    - name: Generate CSR
      openssl_csr: 
        path: /etc/nginx/selfsigned.csr
        privatekey_path: /etc/nginx/selfsigned.key 
        common_name: ansible_lesson_1
        country_name: RU
        email_address: mihail.pashko@gmail.com
        organization_name: ansible_lessons
     
        
    
    - name: Generate an OpenSSL certificate signed 
      community.crypto.x509_certificate:
        path: "/etc/nginx/selfsigned.crt"
        csr_path: "/etc/nginx/selfsigned.csr"        
        privatekey_path: "/etc/nginx/selfsigned.key"
        provider: selfsigned

    

   

    
    - name: create nginx repo definition
      copy:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 0644

    - name: install nginx
      yum:
        name: nginx
        update_cache: true
        state: present
    

    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx




    - name: copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/notls.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx


    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: insert firewalld rule for nginx
      firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
        immediate: true
      
      loop:
        - "{{ nginx_port_no_tls }}/tcp"
        - "{{ nginx_port_with_tls }}/tcp"
      ignore_errors: true




  post_tasks:
    - name: check web site from control server
      uri:
        url: "http://{{ ansible_host }}:{{ nginx_port_no_tls }}"
        return_content: true
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200
    
    - name: check web site https from control server
      uri:
        url: "https://{{ ansible_host }}:{{ nginx_port_with_tls }}"
        validate_certs: false
        return_content: true
      connection: local
      
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200


  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
